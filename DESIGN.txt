Bomb It C!
by Connie Lei, Charles Weng, and Jennifer Zhang

Summary:
Our program will mimic the popular children's game, Bomb It! -- Players will be able to move around, dropping bombs to destroy obstacles and kill other players. The goal of the game is to be the last one standing. Features will include powerups and multiplayer. Using networking, we will solve the problem of the original game, which limited all players to one machine.

Usage/User Interface:
When you launch the program, there will be a starting prompt, which will display options for flags:
     -h host a new game, which returns the KEY for other players to connect
     	There will be a prompt for the host if they want to start the game, as well as the map and how many computer players they want in the game.
     -c <KEY> connect to the game with KEY
     -r return the rules of the game and what each ascii character represents
After you successfully created/connected to a game, and the host starts the game, then you can play!
     -m list maps: will have options to create and choose maps to see how they look like
WHEN CREATING A MAP: On the lefthand side, commands for placing obstacles will be displayed. The righthand side will display the map.

WHEN PLAYING: On the lefthand side, your stats will be displayed. The righthand side will display the map, as well as all the players on it.

Rules:
	Controls:
		WASD: Move your character
    		Spacebar: Drop bomb/Use powerup (if there is one)
	How to play:
	        The goal of the game is to be the last one standing. Move around and kill other players by bombing them. There will be obstacles in the way, some bombable, and others indestructable. Clear them with a chance of getting powerups.
	Ascii Representations:
		P: Player (Different Colors)
		O: Bomb
		#: Bomb explosion range (solid red)
		#: Indestructable obstacle (solid white)
		#: Bombable obstacle (white)
		Powerups:
			+: Increase maximum bomb's limit
			*: Increase bomb power (increasing its explosion range)
			m: Add gloves (for the rest of the game, you can push bombs around -- while in mid-push, the bomb's timer is frozen.)

Technical Design:
Maps: Reading and writing from plain text files
Networking:
	Server:
		Receiving player's movements
		Sending the game information to the client
	Client:
		Hosting a game will fork off a server
		Connecting to a game will connect to the server
		Keyboard interception
		Printing out the game into the terminal

Team Roles:
	Connie:
		Front end: Figure out terminal codes for coloring and designing
		Keyboard Interception: Figure out how to incorporate keyboard interception so that the game can function with controls
	Charles:
		Networking: Working out multiplayer features
	Jennifer:
		Gameplay: The basics of the game, with players stats, bombs, and powerups
		Maps: Loading maps, and if there's time, creating maps.

Timeline:

January 6:
	Basic structure for the game

January 10:
	Menus: Starting prompt, flags, etc.

January 12:
	Keyboard interception: player basic movement
	
January 19, MVP done:
	Finish game features: hardcode maps, dropping bombs, powerups, killing enemies, destroying obstacles, etc.
	Front end: game will display stats, and colors will be prettier
	Networking: Multiplayer features, hosting and connecting to a game


January 24, Post-MVP:
	Maps: Creating maps and loading them into the game
	Computer Players: **if time**
